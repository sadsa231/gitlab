- @force_fluid_layout = true
- add_to_breadcrumbs _('Pipelines'), project_pipelines_path(@project)
- breadcrumb_title "##{@pipeline.id}"
- page_title _('Pipeline')
- pipeline_has_errors = @pipeline.builds.empty? && @pipeline.yaml_errors.present?
- add_page_specific_style 'page_bundles/pipeline'
- add_page_specific_style 'page_bundles/reports'
- add_page_specific_style 'page_bundles/ci_status'
- add_page_startup_graphql_call('pipelines/get_pipeline_details', { projectPath: @project.full_path, iid: @pipeline.iid })

.js-pipeline-container{ data: { controller_action: "#{controller.action_name}" } }
  #js-pipeline-header-vue.pipeline-header-container{ data: { full_path: @project.full_path, graphql_resource_etag: graphql_etag_pipeline_path(@pipeline), pipeline_iid: @pipeline.iid, pipeline_id: @pipeline.id, pipelines_path: project_pipelines_path(@project) } }

  = render_if_exists 'projects/pipelines/cc_validation_required_alert', pipeline: @pipeline

  - if @pipeline.commit.present?
    = render "projects/pipelines/info", commit: @pipeline.commit

  - if pipeline_has_errors
    .bs-callout.bs-callout-danger
      %h4= _('Unable to create pipeline')
      %ul
        - @pipeline.yaml_errors.split("\n").each do |error|
          %li= error

  - else
    #js-pipeline-tabs{ data: js_pipeline_tabs_data(@project, @pipeline, @current_user) }
